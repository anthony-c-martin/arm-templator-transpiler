input string location
input string namePrefix

// distinguish between params and vars?
// readability - colorization?

// script myScript {
  // write a script here

  // how do I get outputs?
// }
// var myScript.outputs.something

// pass the object name as a displayName in the ARM template
// could the object be optional?
resource azrm 'network/virtualNetworks/subnets@2019-11-01' mySubnet {
  name: concat(namePrefix, '-subnet')
  location: location
  properties: {
    addressSpace: {
      addressPrefixes: [
        '10.0.0.0/24'
      ]
    }
  }
}

// nicName, potentially, should not be available above this line
input nicName string
resource azrm 'network/networkInterfaces@2019-11-01' myNic {
  // should I be able to declare an input here?

  // if we are going to do whitespace delimiter, make sure multi-line work
  name: concat(namePrefix, '-nic')
  location: location
  properties: {
    ipConfigurations: [{
      name: 'myConfig'
      properties: {
        subnet: {
          id: resourceId(mySubnet)
        }
        privateIPAllocationMethod: 'Dynamic'
      }
    }]
    // should I be able to declare an input here and use it above?
  }
}
output nicId resourceId(myNic)
output myNewOutput 'test'

/* this block comment should be ignored
resource azrm 'network/publicIpAddresses@2019-11-01' myPip {
  name: concat(namePrefix, '-pip')
  properties: {
  }
}
*/

// this comment should be ignored
resource azrm 'network/publicIPAddresses@2019-11-01' myPip {
  name: concat(namePrefix, '-pip')
  location: location
  properties: {
    publicIPAllocationMethod: 'Dynamic'
  }
}

// modules are ignored for now, but note that identifier clashes (redefining inputs or resources) are allowed due to scoping
module testModule {
  input string location
  input string namePrefix

  resource azrm 'network/publicIpAddresses@2019-11-01' myPip {
    name: concat(namePrefix, '-pip')
    location: location
    properties: {
    publicIPAllocationMethod: 'Dynamic'
    }
  }
}

output nicResourceId: resourceId(myNic)
