module sqlServer {
  input string name
  input string location
  input string password

  resource azrm 'sql/servers@2019-06-01-preview' sqlServer {
    name: name
    location: location
    kind: 'v12.0'
    properties: {
      administratorLogin: 'sonofdiesel'
      administratorLoginPassword: password
      version: '12.0'
    }
  } 
}

module sqlDb {
  input string name
  input string location
}

/*
module firewallRule {

}
*/

// Microsoft.Web/sites
// /config, /deployments, /hostNameBindings * 4 
module appService {
  input string name
  input string location

  resource azrm 'web/sites@2018-11-01' site {
    name: name
    location: location
    kind: 'app'
    properties: {
      enabled: true
      hostNameSslStates: sslStates
      serverFarmId: resourceId(farm)
    }
    // there are other props but would like to see if they are default
  }

  // web/serverFarms
  resource azrm 'web/serverFarms@2018-02-01' farm {
    name: name
    location: location
    sku: {
      name: 'D1'
      tier: 'Shared'
      size: 'D1'
      family: 'D'
      capacity: 0
    }
    kind: 'app'
    properties: {
      perSiteScaling: false
    }
  }

  // web/sites/config
  resource azrm 'web/sites/config@2018-11-01' config { // need 'microsoft.' for child resources
    // how does it know to do dependsOn for child resources?
    name: concat(name, '/', 'web') // why is this called 'web'?
    location: location
    dependsOn: resourceId(site) // need dependsOn for child resources
    properties: {
      // numberOfWorkers: 1
      defaultDocuments: [
        'Default.htm'
        'Default.html'
        'Default.asp'
        'index.htm'
        'index.html'
        'iisstart.htm'
        'default.aspx'
        'index.php'
        'hostingstart.html'        
      ]
      netFrameworkVersion: 'v4.0'
      phpVersion: '5.6'
      publishingUsername: '$lawrencefarmsantiques'
      scmType: 'LocalGit'
      managedPipelineMode: 'Integrated'
      virtualApplications: {
        virtualPath: '/'
        physicalPath: 'site\\wwwroot'
        preloadEnabled: false
      }
      loadBalancing: 'LeastRequests'
      // many, many properties missing
    }
  }

  // web/sites/deployments
  /*
  resource azrm 'web/sites/deployments@2018-11-01' webDeployment {
    name: concat(name, 'abc')
  }
  */

  // web/sites/hostNameBindings * 4


  variable sslStates = [
      {
          name: '*.lawrencefarmsantiques.com'
          sslState: 'Disabled'
          hostType: 'Standard'
      }
      {
          name: 'lawrencefarmsantiques.azurewebsites.net'
          sslState: 'Disabled'
          hostType: 'Standard'
      }
      {
          name: 'lawrencefarmsantiques.com'
          sslState: 'Disabled'
          hostType: 'Standard'
      }
      // did not include all states, not sure what this does
  ]
}

// need to create site and farm together because no other way to get resId
module appServiceContainer {
  input string name
  input string location

  input string acrName
  input string dockerUsername
  input string dockerPassword
  input string dockerImageAndTag

  resource azrm 'web/sites@2018-11-01' site {
    name: name
    location: location
    properties: {
      name: name
      siteConfig: {
        appSettings: [
          {
            name: 'DOCKER_REGISTRY_SERVER_URL'
            value: concat('https://', acrName, '.azurecr.io') // 'https://almancontainerregistry.azurecr.io' 
          }
          {
            name: 'DOCKER_REGISTRY_SERVER_USERNAME'
            value: dockerUsername
          }
          {
            name: 'DOCKER_REGISTRY_SERVER_PASSWORD'
            value: dockerPassword
          }
          {
            name: 'WEBSITES_ENABLE_APP_SERVICE_STORAGE'
            value: 'false'
          }
        ]
        linuxFxVersion: concat('DOCKER|', acrName, '.azurecr.io/', dockerImageAndTag)
        // appCommandLine: ''
        // alwaysOn: 'false' // these are also not working
      }
      serverFarmId: resourceId(farm)
      // hostingEnvironment: ''
      // clientAffinitiyEnabled: 'false' // these are also not working
    }
    // there are other props but would like to see if they are default
  }

  resource azrm 'web/serverFarms@2018-11-01' farm { // 2018-02-01 was not working, so trying this...
    name: name
    location: location
    sku: {
      name: 'B1'
      tier: 'Basic'
    }
    kind: 'linux' // if kind=app -> windows
    properties: {
      name: name
      workerSize: '0'
      workerSizeId: '0'
      numberOfWorkers: '1'
      reserved: 'true' // true does not get passed through, but "true" does...
      hostingEnvironment: ''
    }
  }
}


