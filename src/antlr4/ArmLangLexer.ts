// Generated from ./src/antlr4/ArmLang.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ArmLangLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly Identifier = 21;
	public static readonly Number = 22;
	public static readonly String = 23;
	public static readonly BlockComment = 24;
	public static readonly LineComment = 25;
	public static readonly Whitespace = 26;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "Identifier", "Number", "String", "NonDigit", 
		"Digit", "NonzeroDigit", "StringEscapeSequence", "StringChar", "BlockComment", 
		"LineComment", "Whitespace",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'input'", "'output'", "'resource'", "'{'", "'}'", "':'", "'['", 
		"']'", "'('", "')'", "','", "'string'", "'securestring'", "'int'", "'bool'", 
		"'object'", "'array'", "'true'", "'false'", "'.'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"Identifier", "Number", "String", "BlockComment", "LineComment", "Whitespace",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ArmLangLexer._LITERAL_NAMES, ArmLangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ArmLangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ArmLangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "ArmLang.g4"; }

	// @Override
	public get ruleNames(): string[] { return ArmLangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ArmLangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ArmLangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ArmLangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1C\xE3\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x03\x02\x03\x02" +
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04" +
		"\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b" +
		"\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03" +
		"\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03" +
		"\x16\x07\x16\xA2\n\x16\f\x16\x0E\x16\xA5\v\x16\x03\x17\x03\x17\x07\x17" +
		"\xA9\n\x17\f\x17\x0E\x17\xAC\v\x17\x03\x18\x03\x18\x07\x18\xB0\n\x18\f" +
		"\x18\x0E\x18\xB3\v\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A" +
		"\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x05\x1D\xC2\n" +
		"\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x07\x1E\xC8\n\x1E\f\x1E\x0E\x1E\xCB" +
		"\v\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x07\x1F\xD6\n\x1F\f\x1F\x0E\x1F\xD9\v\x1F\x03\x1F\x03\x1F\x03" +
		" \x06 \xDE\n \r \x0E \xDF\x03 \x03 \x03\xC9\x02\x02!\x03\x02\x03\x05\x02" +
		"\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
		"\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
		"!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
		"\x191\x02\x023\x02\x025\x02\x027\x02\x029\x02\x02;\x02\x1A=\x02\x1B?\x02" +
		"\x1C\x03\x02\t\x05\x02C\\aac|\x03\x022;\x03\x023;\x06\x02))^^pptt\x06" +
		"\x02\f\f\x0F\x0F))^^\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0E\x0F\"\"\x02\xE5" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02" +
		"?\x03\x02\x02\x02\x03A\x03\x02\x02\x02\x05G\x03\x02\x02\x02\x07N\x03\x02" +
		"\x02\x02\tW\x03\x02\x02\x02\vY\x03\x02\x02\x02\r[\x03\x02\x02\x02\x0F" +
		"]\x03\x02\x02\x02\x11_\x03\x02\x02\x02\x13a\x03\x02\x02\x02\x15c\x03\x02" +
		"\x02\x02\x17e\x03\x02\x02\x02\x19g\x03\x02\x02\x02\x1Bn\x03\x02\x02\x02" +
		"\x1D{\x03\x02\x02\x02\x1F\x7F\x03\x02\x02\x02!\x84\x03\x02\x02\x02#\x8B" +
		"\x03\x02\x02\x02%\x91\x03\x02\x02\x02\'\x96\x03\x02\x02\x02)\x9C\x03\x02" +
		"\x02\x02+\x9E\x03\x02\x02\x02-\xA6\x03\x02\x02\x02/\xAD\x03\x02\x02\x02" +
		"1\xB6\x03\x02\x02\x023\xB8\x03\x02\x02\x025\xBA\x03\x02\x02\x027\xBC\x03" +
		"\x02\x02\x029\xC1\x03\x02\x02\x02;\xC3\x03\x02\x02\x02=\xD1\x03\x02\x02" +
		"\x02?\xDD\x03\x02\x02\x02AB\x07k\x02\x02BC\x07p\x02\x02CD\x07r\x02\x02" +
		"DE\x07w\x02\x02EF\x07v\x02\x02F\x04\x03\x02\x02\x02GH\x07q\x02\x02HI\x07" +
		"w\x02\x02IJ\x07v\x02\x02JK\x07r\x02\x02KL\x07w\x02\x02LM\x07v\x02\x02" +
		"M\x06\x03\x02\x02\x02NO\x07t\x02\x02OP\x07g\x02\x02PQ\x07u\x02\x02QR\x07" +
		"q\x02\x02RS\x07w\x02\x02ST\x07t\x02\x02TU\x07e\x02\x02UV\x07g\x02\x02" +
		"V\b\x03\x02\x02\x02WX\x07}\x02\x02X\n\x03\x02\x02\x02YZ\x07\x7F\x02\x02" +
		"Z\f\x03\x02\x02\x02[\\\x07<\x02\x02\\\x0E\x03\x02\x02\x02]^\x07]\x02\x02" +
		"^\x10\x03\x02\x02\x02_`\x07_\x02\x02`\x12\x03\x02\x02\x02ab\x07*\x02\x02" +
		"b\x14\x03\x02\x02\x02cd\x07+\x02\x02d\x16\x03\x02\x02\x02ef\x07.\x02\x02" +
		"f\x18\x03\x02\x02\x02gh\x07u\x02\x02hi\x07v\x02\x02ij\x07t\x02\x02jk\x07" +
		"k\x02\x02kl\x07p\x02\x02lm\x07i\x02\x02m\x1A\x03\x02\x02\x02no\x07u\x02" +
		"\x02op\x07g\x02\x02pq\x07e\x02\x02qr\x07w\x02\x02rs\x07t\x02\x02st\x07" +
		"g\x02\x02tu\x07u\x02\x02uv\x07v\x02\x02vw\x07t\x02\x02wx\x07k\x02\x02" +
		"xy\x07p\x02\x02yz\x07i\x02\x02z\x1C\x03\x02\x02\x02{|\x07k\x02\x02|}\x07" +
		"p\x02\x02}~\x07v\x02\x02~\x1E\x03\x02\x02\x02\x7F\x80\x07d\x02\x02\x80" +
		"\x81\x07q\x02\x02\x81\x82\x07q\x02\x02\x82\x83\x07n\x02\x02\x83 \x03\x02" +
		"\x02\x02\x84\x85\x07q\x02\x02\x85\x86\x07d\x02\x02\x86\x87\x07l\x02\x02" +
		"\x87\x88\x07g\x02\x02\x88\x89\x07e\x02\x02\x89\x8A\x07v\x02\x02\x8A\"" +
		"\x03\x02\x02\x02\x8B\x8C\x07c\x02\x02\x8C\x8D\x07t\x02\x02\x8D\x8E\x07" +
		"t\x02\x02\x8E\x8F\x07c\x02\x02\x8F\x90\x07{\x02\x02\x90$\x03\x02\x02\x02" +
		"\x91\x92\x07v\x02\x02\x92\x93\x07t\x02\x02\x93\x94\x07w\x02\x02\x94\x95" +
		"\x07g\x02\x02\x95&\x03\x02\x02\x02\x96\x97\x07h\x02\x02\x97\x98\x07c\x02" +
		"\x02\x98\x99\x07n\x02\x02\x99\x9A\x07u\x02\x02\x9A\x9B\x07g\x02\x02\x9B" +
		"(\x03\x02\x02\x02\x9C\x9D\x070\x02\x02\x9D*\x03\x02\x02\x02\x9E\xA3\x05" +
		"1\x19\x02\x9F\xA2\x051\x19\x02\xA0\xA2\x053\x1A\x02\xA1\x9F\x03\x02\x02" +
		"\x02\xA1\xA0\x03\x02\x02\x02\xA2\xA5\x03\x02\x02\x02\xA3\xA1\x03\x02\x02" +
		"\x02\xA3\xA4\x03\x02\x02\x02\xA4,\x03\x02\x02\x02\xA5\xA3\x03\x02\x02" +
		"\x02\xA6\xAA\x055\x1B\x02\xA7\xA9\x053\x1A\x02\xA8\xA7\x03\x02\x02\x02" +
		"\xA9\xAC\x03\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAA\xAB\x03\x02\x02\x02" +
		"\xAB.\x03\x02\x02\x02\xAC\xAA\x03\x02\x02\x02\xAD\xB1\x07)\x02\x02\xAE" +
		"\xB0\x059\x1D\x02\xAF\xAE\x03\x02\x02\x02\xB0\xB3\x03\x02\x02\x02\xB1" +
		"\xAF\x03\x02\x02\x02\xB1\xB2\x03\x02\x02\x02\xB2\xB4\x03\x02\x02\x02\xB3" +
		"\xB1\x03\x02\x02\x02\xB4\xB5\x07)\x02\x02\xB50\x03\x02\x02\x02\xB6\xB7" +
		"\t\x02\x02\x02\xB72\x03\x02\x02\x02\xB8\xB9\t\x03\x02\x02\xB94\x03\x02" +
		"\x02\x02\xBA\xBB\t\x04\x02\x02\xBB6\x03\x02\x02\x02\xBC\xBD\x07^\x02\x02" +
		"\xBD\xBE\t\x05\x02\x02\xBE8\x03\x02\x02\x02\xBF\xC2\n\x06\x02\x02\xC0" +
		"\xC2\x057\x1C\x02\xC1\xBF\x03\x02\x02\x02\xC1\xC0\x03\x02\x02\x02\xC2" +
		":\x03\x02\x02\x02\xC3\xC4\x071\x02\x02\xC4\xC5\x07,\x02\x02\xC5\xC9\x03" +
		"\x02\x02\x02\xC6\xC8\v\x02\x02\x02\xC7\xC6\x03\x02\x02\x02\xC8\xCB\x03" +
		"\x02\x02\x02\xC9\xCA\x03\x02\x02\x02\xC9\xC7\x03\x02\x02\x02\xCA\xCC\x03" +
		"\x02\x02\x02\xCB\xC9\x03\x02\x02\x02\xCC\xCD\x07,\x02\x02\xCD\xCE\x07" +
		"1\x02\x02\xCE\xCF\x03\x02\x02\x02\xCF\xD0\b\x1E\x02\x02\xD0<\x03\x02\x02" +
		"\x02\xD1\xD2\x071\x02\x02\xD2\xD3\x071\x02\x02\xD3\xD7\x03\x02\x02\x02" +
		"\xD4\xD6\n\x07\x02\x02\xD5\xD4\x03\x02\x02\x02\xD6\xD9\x03\x02\x02\x02" +
		"\xD7\xD5\x03\x02\x02\x02\xD7\xD8\x03\x02\x02\x02\xD8\xDA\x03\x02\x02\x02" +
		"\xD9\xD7\x03\x02\x02\x02\xDA\xDB\b\x1F\x02\x02\xDB>\x03\x02\x02\x02\xDC" +
		"\xDE\t\b\x02\x02\xDD\xDC\x03\x02\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF\xDD" +
		"\x03\x02\x02\x02\xDF\xE0\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE1\xE2" +
		"\b \x02\x02\xE2@\x03\x02\x02\x02\v\x02\xA1\xA3\xAA\xB1\xC1\xC9\xD7\xDF" +
		"\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ArmLangLexer.__ATN) {
			ArmLangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ArmLangLexer._serializedATN));
		}

		return ArmLangLexer.__ATN;
	}

}

